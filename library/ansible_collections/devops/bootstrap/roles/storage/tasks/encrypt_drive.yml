---
- name: Install dependencies
  ansible.builtin.package:
    name: jq
    state: present
  become: yes

- name: Check '{{ second_drive }}' exists
  ansible.builtin.stat:
    path: "{{ second_drive }}"
  register: drive_stat

- name: Fail if drive does not exists
  ansible.builtin.fail:
    msg: Drive '{{ second_drive }}' does not exists
  when: not drive_stat.stat.exists

- name: Find root drive
  ansible.builtin.shell: >
    lsblk -oNAME,MOUNTPOINT -J | 
    jq -r '.blockdevices[] | . as $bd | .. | objects | select(.mountpoint == "/") | $bd.name'
  register: root_drive_info


- name: Fail if this drive contains root
  ansible.builtin.fail:
    msg: "{{ second_drive }} contains root"
  when: '"/dev/" + root_drive_info.stdout == second_drive'

- name: Encrypt second drive
  community.crypto.luks_device:
    device: "{{ second_drive }}"
    state: "present"
    passphrase: "{{ crypt_passphrase }}"
  become: yes

